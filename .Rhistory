x<-list(a="a",b="bee" )
x
x$a
y<-numeric(y)
y<-numeric()
y
m<-matrix(1:6, 3, 2)
m
m[2]
m[1]
m[6]
setwd("H:/Coursera-R/week3")
setwd("H:/Coursera-R/week3/ProgrammingAssignment2")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
a<-1:4
makeVector(a)
cachemean(a)
View(cachemean)
cachemean(a)
source('H:/Coursera-R/week3/ProgrammingAssignment2/cachematrix.R')
x<-1:10
makeVector()
makeVector(x)
x$set
x$set(x)
vec<-makeVector(x)
vec
vec$set(x)
mean(x)
cachemean(vec)
debug(cachemean)
cachemean(vec)
cachemean(vec)
Q
cachemean(vec)
undebug(cachemean)
cachemean(vec)
x<-1:20
mean(x)
vec<-makeVector(x)
vec<-makeVector()
vec$set(x)
vec$get()
vec$getmean
vec$getmean()
cachemean(vec)
cachemean(vec)
vec$set(1:10)
vec$getmean(())
vec$getmean()
cachemean(vec)
cachemean(vec)
source('H:/Coursera-R/week3/ProgrammingAssignment2/cachematrix.R')
mat<-makeCacheMatrix()
m<-matrix(1:4,2,2)
m
solve(m)
mat$set(m)
mat$get()
mat$getinv()
cacheSolve(mat)
mat$get()
mat$getinv()
cacheSolve(mat)
source('H:/Coursera-R/week3/ProgrammingAssignment2/cachematrix.R')
m<-as.data.frame(m)
m[2]
m[,2]
m[1:2]
m[1,2]
m[1][2]
m
m<-matrix(c(1,0,5,2,1,6,3,4,0), nrow=3, ncol=3)
m
matrixx<-makeCacheMatrix(m)
matrixx$get()
matrixx$get()
matrixx$getinv()
cacheSolve(matrixx)
matrixx$getinv()
class(matrixx$getinv())
class(matrixx$get())
cacheSolve(matrixx)
x<-1:10
vec<-makeVector(x)
vec$get()
debug(makeVector)
vec<-makeVector(x)
x
y
vec<-makeVector(x)
undebug(makeVector)
vec
cachemean(vec)
debug(cachemean)
cachemean(vec)
debug(makeVector)
vec<-makeVector(x)
vec<-makeVector(x)
undebug(makeVector)
undebug(cachemean)
new_counter <- function() {}
new_counter <- function() {
i<-0
function() {
1<<-i+1
}}
new_counter <- function() {
i<-0
function(){
i<<-i+1
i
}
}
counter_one<-new_counter()
counter_two<-new_counter()
counter_one()
counter_one()
counter_two()
debug(counter_one)
counter_one()
i
counter_one()
undebug(counter_one)
environment(counter_one)
